{"version":3,"sources":["webpack:///src/app/_services/venueUnit.service.ts","webpack:///src/app/public/bookings/add-booking/meeting-room/meeting-room.component.html","webpack:///src/app/public/bookings/add-booking/meeting-room/meeting-room.component.ts","webpack:///src/app/_services/booking.service.ts","webpack:///src/app/public/bookings/meeting-book/meeting-book.component.html","webpack:///src/app/public/bookings/meeting-book/meeting-book.component.ts","webpack:///src/app/public/bookings/cancel-booking/cancel-booking.component.ts","webpack:///src/app/public/bookings/cancel-booking/cancel-booking.component.html","webpack:///src/app/public/bookings/view-booking/view-booking.component.html","webpack:///src/app/public/bookings/view-booking/view-booking.component.ts","webpack:///src/app/public/bookings/view-room/view-room.component.html","webpack:///src/app/modules/booking/booking-routing.module.ts","webpack:///src/app/public/bookings/view-room/view-room.component.ts","webpack:///src/app/modules/booking/booking.module.ts"],"names":["VenueUnitService","http","data","param","this","post","a","apiUrl","object","id","get","MeetingRoomComponent","BookingService","activatedRoute","utilService","spaceTypeService","inventoryService","imageService","venueUnitService","alertService","displayedColumns","floorLoading","inventory","floors","book","step","venue","spaceType","vacentInventory","vacentCount","loading","departments","brand","query","building","selectedFloor","selectedSpaceType","spaceTypes","getBrand","getVenue","getBuilding","loadAllSpaceType","params","subscribe","objectId","loadVacentInventory","_id","loadAllFloors","getAll","pipe","retry","length","error","forEach","element","getIndex","floor","push","item","inventoryType","objectType","getById","spaceName","name","replace","count","type","getImageUrl","selectFloor","loadSpaceType","booking","put","MeetingBookComponent","CancelBookingComponent","router","formBuilder","bookingService","authenticationService","searchService","dialog","userService","submitted","slotLoading","availableSlots","currentUser","members","duration","hostList","usersList","host","currentUserValue","registerForm","group","title","required","startDate","Date","toISOString","endDate","startTime","timeToInput","endTime","addHours","paymentType","purpose","email","description","today","dayStartHour","getHours","setHours","dayEndHour","loadAllUser","allocateHost","controls","patchValue","transformMinute","date","addMinutes","value","Math","round","getAvailableSlots","available","updateTime","invalid","model","user","seat","capacity","status","creator","moment","register","success","navigate","getObject","i","splice","setValue","field","_that","onChangeSearch","filteredHostOptions","filterForm","filteredLessorOptions","users","index","indexOf","onSubmit","searchData","loadAvailableSlots","ViewBookingComponent","homeUrl","getHomeUrl","loadInvoices","objects","formatLocalDate","getDefaultImageUrl","getFileUrl","printContents","document","getElementById","innerHTML","body","window","print","location","reload","getFormattedAmount","copyData","HOST","open","width","height","afterClosed","result","console","log","cancelDialog","ViewRoomComponent","BookingModule","BookingRoutingModule","routes","path","component","canActivate","amenities","facilitySkeleton","siteFiles","progress","uploadedImage","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { appConfig } from \"../global.config\";\nimport { Observable } from \"rxjs\";\nconst service=\"building\";\n@Injectable({ providedIn: \"root\" })\nexport class VenueUnitService {\n  constructor(private http: HttpClient) {}\n\n  getAll(data, param): Observable<any> {\n    return this.http.post<any[]>(\n      `${appConfig.apiUrl}/${service}/venue-unit` + param,\n      data\n    );\n  }\n\n  register(object: any) {\n    return this.http.post(\n      `${appConfig.apiUrl}/${service}/venue-unit/register`,\n      object\n    );\n  }\n\n  getById(id: String) {\n    return this.http.get(`${appConfig.apiUrl}/${service}/venue-unit/` + id);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${appConfig.apiUrl}/${service}/venue-unit/${id}`);\n  }\n}\n","<div class=\"container-fluid p-0\">\n  <div class=\"box-container mx-auto\">\n    <div class=\"header\">\n      <div> <a class=\"d-flex align-items-center text-dark\" onclick=\"history.back()\">\n          <svg width=\"38\" height=\"39\" viewBox=\"0 0 38 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"19\" cy=\"19.7747\" r=\"18.5\" stroke=\"#6C757D\" />\n            <path\n              d=\"M8.76354 19.3351L13.9963 14.3406C14.3868 13.9661 15.0228 13.9661 15.4133 14.3454C15.8039 14.72 15.8039 15.3299 15.4083 15.7045L11.8932 19.0566H29.4419C29.9927 19.0566 30.4434 19.4888 30.4434 20.0171C30.4434 20.5453 29.9927 20.9775 29.4419 20.9775H11.8932L15.4083 24.3296C15.7989 24.7042 15.8039 25.3141 15.4133 25.6887C15.0228 26.0633 14.3868 26.0681 13.9963 25.6935L8.76354 20.699C8.36796 20.3196 8.37297 19.7097 8.76354 19.3351Z\"\n              fill=\"#6C757D\" />\n          </svg> <span class=\"ml-2\"> Back</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"firstBox\">\n\n      <div class=\"boxContent\">\n\n\n        <div class=\"row\">\n          <div class=\"col-6 px-2\"> <mat-form-field class=\"w-100\" appearance=\"outline\">\n              <mat-label>Select Floor</mat-label>\n              <mat-select (selectionChange)=\"selectFloor($event.value)\" [value]=\"selectedFloor\">\n                <mat-option value=\"All\">All</mat-option>\n                <mat-option *ngFor=\"let item of floors\" [value]=\"item\">{{item.name}}</mat-option>\n              </mat-select>\n            </mat-form-field></div>\n          <div class=\"col-6 px-2\">\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n              <mat-label>Select Room</mat-label>\n              <mat-select [value]=\"selectedSpaceType\" (selectionChange)=\"loadSpaceType($event.value)\">\n                <mat-option value=\"All\">All</mat-option>\n                <mat-option *ngFor=\"let item of spaceTypes\" [value]=\"item._id\">{{item.name}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n\n\n\n        <div *ngIf=\"!loading\">\n          <div>\n            <mat-card class=\"room-card mb-3\" *ngFor=\"let item of vacentInventory\">\n              <div class=\"d-flex\">\n                <div>\n                  <img [lazyLoad]=\"imgSrc('venue',item.image?.name)\" defaultImage=\"/assets/image/ScanQr/defaltRoom.svg\"\n                    class=\"meeting-img\" width=\"76\" height=\"76\" alt=\"\">\n                </div>\n                <div class=\"d-flex flex-column pl-3\">\n                  <div class=\"d-flex\">\n                    <div>\n                      <h2 class=\"mb-3\">{{item?.spaceType?.name}} {{item.name}}</h2>\n                    </div>\n                    <div class=\"ml-auto position-absolute\" style=\"right:16px;\">\n                      <a class=\"link\" [routerLink]=\"'/booking/room/view/'+item._id\"><svg width=\"22\" height=\"12\"\n                          viewBox=\"0 0 22 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            d=\"M21.3307 5.09294L16.2756 0.270675C15.8983 -0.0909942 15.2839 -0.0909942 14.9066 0.275312C14.5293 0.636982 14.5293 1.22585 14.9114 1.58752L18.3073 4.824H1.3542C0.822087 4.824 0.386719 5.24131 0.386719 5.75136C0.386719 6.26141 0.822087 6.67872 1.3542 6.67872H18.3073L14.9114 9.9152C14.5341 10.2769 14.5293 10.8657 14.9066 11.2274C15.2839 11.5891 15.8983 11.5937 16.2756 11.232L21.3307 6.40979C21.7128 6.04348 21.708 5.45461 21.3307 5.09294Z\"\n                            fill=\"#176CFF\" />\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                  <div class=\"d-flex\">\n                    <div class=\"bg-available\">\n                      Available\n                    </div>\n                    <div class=\"ml-5\">\n                      <p class=\"d-flex\">\n                        <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                            d=\"M10.9434 9.62134C10.9434 10.0678 11.238 10.3643 11.6817 10.3643C13.7548 10.3643 15.3806 8.7319 15.3806 6.6461C15.3806 4.5603 13.7548 2.92444 11.6817 2.92444C11.238 2.92444 10.9434 3.2244 10.9434 3.67086C10.9434 4.11732 11.238 4.4138 11.6817 4.4138C12.9401 4.4138 13.9004 5.37997 13.9004 6.6461C13.9004 7.91223 12.9401 8.8784 11.6817 8.8784C11.238 8.8784 10.9434 9.17488 10.9434 9.62134ZM15.3806 14.8324C15.3806 15.2788 15.6753 15.5753 16.119 15.5753C16.5627 15.5753 16.8609 15.2753 16.9337 14.8359C16.9337 13.2733 15.5297 11.8571 13.3839 11.3374C13.013 11.1875 12.5692 11.4839 12.4964 11.8571C12.3474 12.2304 12.642 12.6768 13.013 12.7501C14.4204 13.0465 15.3806 13.9395 15.3806 14.8324Z\"\n                            fill=\"#6C757D\" />\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                            d=\"M7.24402 10.3642C5.17446 10.3642 3.54516 8.72829 3.54516 6.64249C3.54516 4.55669 5.17446 2.92432 7.24402 2.92432C9.31357 2.92432 10.9429 4.56017 10.9429 6.64598C10.9429 8.73178 9.31704 10.3642 7.24402 10.3642ZM10.9428 14.8324C10.9428 15.2789 11.2375 15.5754 11.6812 15.5754C12.125 15.5754 12.4231 15.2754 12.4196 14.8289C12.4196 12.7431 10.1282 11.1073 7.24399 11.1073C4.35978 11.1073 2.06836 12.7466 2.06836 14.8289C2.06836 15.2754 2.36302 15.5754 2.80674 15.5754C3.25047 15.5754 3.54513 15.2789 3.54513 14.8324C3.54513 13.643 5.24723 12.6001 7.24399 12.6001C9.24075 12.6001 10.9428 13.643 10.9428 14.8324Z\"\n                            fill=\"#6C757D\" />\n                        </svg>\n                        {{item.capacity}}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\" pt-3\">\n                <button class=\"py-1 bookBtn w-100\" mat-stroked-button\n                  [routerLink]=\"'/booking/confirm/'+item._id\">Book</button>\n              </div>\n            </mat-card>\n          </div>\n          <div *ngIf=\"vacentInventory.length==0\" class=\"text-center d-flex flex-column align-self-center mx-auto\">\n            <img src=\"/assets//image/empty-space.svg\" alt=\"\">\n            <h3>{{spaceType.name}} Rooms Not Available !</h3>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n<div class=\"meeting-room\">\n\n  <!-- <mat-card class=\"main-card\" *ngIf=\"step == 1\">\n    <div class=\"d-flex\">\n      <section class=\"right-section\">\n\n\n        <app-skeleton *ngIf=\"loading\"></app-skeleton>\n      </section>\n    </div>\n  </mat-card>\n  </div> -->\n\n  <!-- <mat-card class=\"main-card\" *ngIf=\"step == 2\">\n    <div class=\"mb-2 d-flex align-items-baseline px-3 pt-3\">\n      <div>\n        <h2 class=\"mb-1\">Inventory</h2>\n      </div>\n      <div class=\"ml-auto float-right d-flex\">\n        <div class=\"mr-4\">\n          <p class=\"mb-1\">Total Rooms : <span class=\"font-bold\">{{vacentCount}}</span></p>\n        </div>\n        <div>\n          <p class=\"mb-1\">Available Rooms : <span class=\"font-bold\">{{vacentCount}}</span></p>\n        </div>\n\n      </div>\n    </div>\n    <table mat-table [dataSource]=\"vacentInventory\">\n      <ng-container matColumnDef=\"inventoryName\">\n        <th mat-header-cell *matHeaderCellDef> Inventory name </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div class=\"d-flex\">\n            <div><img [lazyLoad]=\"imgSrc('venue',element.name)\"\n                defaultImage=\"../../../../assets/image/Dashboard/Booking/meeting-room.svg\" class=\"meeting-img-small\"\n                width=\"96\" height=\"96\" alt=\"\"></div>\n            <div class=\"align-self-center ml-1\">\n              {{element?.name}}\n            </div>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef> Category </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.spaceType?.name ? element?.spaceType?.name:'-'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"seater\">\n        <th mat-header-cell *matHeaderCellDef>Seater </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.capacity ? element?.capacity:'--'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"floor\">\n        <th mat-header-cell *matHeaderCellDef> Floor </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.floor?.name ? element?.floor?.name : '--'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"duration\">\n        <th mat-header-cell *matHeaderCellDef> Duration </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.duration?element?.duration:'--'}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"startingTime\">\n        <th mat-header-cell *matHeaderCellDef> Starting time </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.startingTime?element?.startingTime:'--'}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Status</th>\n        <td mat-cell *matCellDef=\"let element\"> -- </td>\n      </ng-container>\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef=\"let element\"> <button *ngIf=\"book==0\" mat-stroked-button color=\"primary\"\n            [routerLink]=\"'/booking/confirm/'+element._id\" class=\"book-btn\">Book</button>\n          <button *ngIf=\"book>0\" mat-stroked-button class=\"view-btn\">View Info</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n\n\n  </mat-card> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { first, retry } from \"rxjs/operators\";\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { InventoryService } from 'src/app/_services/inventory.service';\nimport { SpaceTypeService } from 'src/app/_services/spaceType.service';\nimport { UtilService } from 'src/app/_services/util.service';\nimport { VenueUnitService } from 'src/app/_services/venueUnit.service';\n \ndeclare const mixpanel: any;\n\n\n\n@Component({\n  selector: 'app-meeting-room',\n  templateUrl: './meeting-room.component.html',\n  styleUrls: ['./meeting-room.component.css']\n})\nexport class MeetingRoomComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"inventoryName\",\n    \"category\",\n    \"seater\",\n    \"floor\",\n    \"duration\",\n    \"startingTime\",\n    \"status\",\n    \"action\",\n  ];\n\n  floorLoading: boolean = false;\n  inventory: any = [];\n  floors: any = [];\n  book = 0;\n  step = 1;\n  venue: any = {};\n  spaceType: any = {};\n  spaceName: string;\n  vacentInventory: any = [];\n  vacentCount: number = 0;\n  loading: boolean = false;\n  departments: any = {};\n  brand: any = {};\n  query: any = {};\n  building: any = {};\n  objectId;\n  selectedFloor: string = \"All\";\n  selectedSpaceType: string = \"All\";\n  spaceTypes: any = [];\n  constructor(private activatedRoute: ActivatedRoute,\n    private utilService: UtilService,\n    private spaceTypeService: SpaceTypeService,\n    private inventoryService: InventoryService,\n    private imageService: ImageService,\n    private venueUnitService: VenueUnitService,\n    private alertService: AlertService\n\n  ) { }\n\n  ngOnInit(): void {\n\n    this.brand = this.utilService.getBrand();\n    this.venue = this.utilService.getVenue();\n    this.building = this.utilService.getBuilding();\n\n    this.loadAllSpaceType(\"6065428d17d9243720f34eb8\");\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.objectId = params[\"id\"];\n      if (this.objectId) {\n        this.loadVacentInventory({});\n\n      }\n    });\n    let query = { building: this.building?._id, venue: this.venue?._id };\n    this.loadAllFloors(query, \"\");\n\n  }\n\n  private loadAllFloors(query, param) {\n    this.floorLoading = true;\n    this.venueUnitService\n      .getAll(query, param)\n      .pipe(retry(2))\n      .subscribe((floors) => {\n        if (floors.data.length == 0) {\n          this.alertService.error(\"Floor Not Availale!\");\n        }\n        this.floors = [];\n        floors.data.forEach((element) => {\n          if (\n            this.utilService.getIndex(this.floors, \"_id\", element.floor._id) < 0\n          ) {\n            this.floors.push(element.floor);\n          }\n        });\n\n        this.floorLoading = false;\n      });\n  }\n  selectFloor(item) {\n    this.query.floor = item._id;\n    if (this.spaceType) {\n      this.query.inventoryType = this.spaceType._id;\n    }\n    if (this.objectId) {\n      this.query.objectId = this.objectId;\n    }\n    this.loadVacentInventory(this.query);\n  }\n\n\n  loadAllSpaceType(item) {\n    this.spaceTypes = [];\n    this.spaceTypeService\n      .getAll({ objectType: item, brand: this.brand._id })\n      .pipe(retry(2))\n      .subscribe((spaceType) => {\n        this.spaceTypes = spaceType.data;\n      });\n  }\n  loadSpaceType(item) {\n\n    this.spaceTypeService\n      .getById(item)\n      .pipe(retry(2))\n      .subscribe((spaceType) => {\n        this.spaceType = spaceType;\n        this.spaceName = this.spaceType?.name?.replace('s', '');\n        this.loadVacentInventory({ objectId: this.spaceType._id });\n      });\n  }\n\n  loadVacentInventory(query) {\n    this.loading = true;\n    query.brand = this.brand._id;\n    query.venue = this.venue._id;\n    this.inventoryService\n      .getAll(query, \"\")\n      .pipe(retry(2))\n      .subscribe((data) => {\n        this.vacentCount = data.count;\n        this.vacentInventory = data.data;\n        this.loading = false;\n      });\n  }\n\n  imgSrc(type, name) {\n    return this.imageService.getImageUrl(type, name);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n \nimport { appConfig } from \"../global.config\";\nimport { Observable } from \"rxjs\";\nconst service = \"order\";\n@Injectable({ providedIn: \"root\" })\nexport class BookingService {\n  constructor(private http: HttpClient) { }\n\n  getAll(data, param): Observable<any> {\n    return this.http.post<any[]>(\n      `${appConfig.apiUrl}/${service}/booking` + param, data);\n  }\n\n  register(booking: any) {\n    return this.http.post(`${appConfig.apiUrl}/${service}/booking/register`, booking);\n  }\n  update(booking: any) {\n    return this.http.put(`${appConfig.apiUrl}/${service}/booking`, booking);\n  }\n\n  getById(id: String) {\n    return this.http.get(`${appConfig.apiUrl}/${service}/booking/` + id);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${appConfig.apiUrl}/${service}/booking/${id}`);\n  }\n\n  getAvailableSlots(data, param): Observable<any> {\n    return this.http.post<any[]>(\n      `${appConfig.apiUrl}/${service}/booking/available-slots` + param, data);\n  }\n\n\n  avgBookingCount(data: any) {\n    return this.http.post(`${appConfig.apiUrl}/${service}/analytics/avgBookingCount`, data);\n  }\n\n  dailyBookingCount(data: any) {\n    return this.http.post(`${appConfig.apiUrl}/${service}/analytics/dailyBookingCount`, data);\n  }\n\n  mostBookingInventory(data: any) {\n    return this.http.post(`${appConfig.apiUrl}/${service}/analytics/mostBookingInventory`, data);\n  }\n}\n","<div class=\"container-fluid p-0\">\n  <div class=\"box-container mx-auto\">\n    <div class=\"header\">\n\n      <div> <a class=\"d-flex align-items-center text-dark\" onclick=\"history.back()\">\n          <svg width=\"38\" height=\"39\" viewBox=\"0 0 38 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"19\" cy=\"19.7747\" r=\"18.5\" stroke=\"#6C757D\" />\n            <path\n              d=\"M8.76354 19.3351L13.9963 14.3406C14.3868 13.9661 15.0228 13.9661 15.4133 14.3454C15.8039 14.72 15.8039 15.3299 15.4083 15.7045L11.8932 19.0566H29.4419C29.9927 19.0566 30.4434 19.4888 30.4434 20.0171C30.4434 20.5453 29.9927 20.9775 29.4419 20.9775H11.8932L15.4083 24.3296C15.7989 24.7042 15.8039 25.3141 15.4133 25.6887C15.0228 26.0633 14.3868 26.0681 13.9963 25.6935L8.76354 20.699C8.36796 20.3196 8.37297 19.7097 8.76354 19.3351Z\"\n              fill=\"#6C757D\" />\n          </svg> <span class=\"ml-2\"> Back</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"firstBox\">\n\n      <div class=\"boxContent\">\n\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"d-flex\">\n            <div>\n              <h2>\n                Booking Details\n              </h2>\n            </div>\n            <div class=\"ml-auto float-right d-flex\">\n              <div class=\"mr-3\">\n                <button type=\"button\" mat-stroked-button color=\"accent\" class=\"discard\"\n                  [routerLink]=\"'/booking/room/5eba33813ccca9155084f4d4'\">Discard</button>\n              </div>\n              <div>\n                <button mat-button color=\"primary\">Book</button>\n                <!-- [disabled]=\"registerForm.invalid\" -->\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"card my-3 p-2\" style=\"max-width: 100%;\">\n            <div class=\"row no-gutters\">\n              <div class=\"col-4\">\n                <img class=\"card-img-top\" [lazyLoad]=\"imgSrc('venue',inventory.name)\"\n                  defaultImage=\"/assets/image/ScanQr/meetingRoom.svg\" class=\"meeting-img\" width=\"100%\" height=\"100%\"\n                  alt=\"\">\n              </div>\n              <div class=\"col-8\">\n                <div class=\"card-body\">\n                  <h2 class=\"card-title\">{{inventory.spaceType?.name.replace('s','')}} {{inventory.name}}</h2>\n                  <div class=\"d-flex\">\n                    <label>Capicity</label>\n                    <p class=\"card-text\">{{inventory.capacity}}</p>\n                  </div>\n                  <div class=\"d-flex\">\n                    <label>Time</label>\n                    <p class=\"card-text\">{{duration}}</p>\n                  </div>\n                  <div class=\"d-flex\">\n                    <label>Floor</label>\n                    <p class=\"card-text\">{{inventory.floor?.name}}</p>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <section>\n            <mat-form-field appearance=\"outline\" class=\"full-width w-100\">\n              <mat-label>Enter title</mat-label>\n              <input matInput placeholder=\"Enter title\" formControlName=\"title\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width w-100\">\n              <mat-label>Select purpose</mat-label>\n              <mat-select formControlName=\"purpose\" placeholder=\"Select purpose\">\n                <mat-option value=\"Meeting\">Meeting</mat-option>\n                <mat-option value=\"Interview\">Interview</mat-option>\n                <mat-option value=\"Sales\">Sales</mat-option>\n                <mat-option value=\"Family and Friends\">Family and Friends</mat-option>\n                <mat-option value=\"Courier\">Courier</mat-option>\n                <mat-option value=\"Event\">Event</mat-option>\n                <mat-option value=\"Other\">Other</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"full-width w-100\" appearance=\"outline\">\n              <mat-label>Invite Attendee</mat-label>\n              <input type=\"text\" (keyup)=\"searchData($event.target.value,'user','guest')\" placeholder=\"Invite Attendee\"\n                aria-label=\"Number\" matInput [matAutocomplete]=\"lessorAuto\">\n              <mat-icon class=\"position-relative\" style=\"top: -2px;\" matSuffix>\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6.25001 11.5C9.1495 11.5 11.5 9.1495 11.5 6.25001C11.5 3.35051 9.1495 1 6.25001 1C3.35051 1 1 3.35051 1 6.25001C1 9.1495 3.35051 11.5 6.25001 11.5Z\"\n                    stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                  <path d=\"M9.96289 9.96265L13.0004 13.0002\" stroke=\"black\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n              </mat-icon>\n              <mat-autocomplete #lessorAuto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n\n                <mat-option style=\"line-height:45px !important;\" class=\"my-1\"\n                  *ngFor=\"let option of filteredLessorOptions | async\" [value]=\"option\" (click)=\"selectGuest(option)\">\n                  <div class=\"d-flex flex-row my-1\">\n                    <div style=\"place-self:center ;\">\n                      <app-profile-image [user]=\"option\"></app-profile-image>\n                    </div>\n                    <div class=\"ml-2 align-self-center\">\n                      <h2 class=\"user-text mb-0 font-weight-bold\">{{ option.name }}</h2>\n                      <h6 class=\"mb-0 sub-text\" *ngIf=\"option.designation\">\n                        {{ option.designation.name }}\n                      </h6>\n                    </div>\n                  </div>\n                  <mat-divider></mat-divider>\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n            <mat-chip-list aria-label=\"selection\">\n              <mat-chip *ngFor=\"let item of members\" (removed)=\"remove(item)\">\n                <!-- <app-profile-image [user]=\"item\" [matChip]=\"true\"></app-profile-image> -->\n                {{item.name}}\n                <a matChipRemove [attr.aria-label]=\"'remove ' + item\">\n                  <mat-icon>cancel</mat-icon>\n                </a>\n              </mat-chip>\n            </mat-chip-list>\n            <mat-form-field appearance=\"outline\" class=\"full-width w-100\">\n              <mat-label>booking duration</mat-label>\n              <mat-select formControlName=\"duration\" placeholder=\"booking duration\"\n                (selectionChange)=\"loadAvailableSlots($event.value)\">\n                <mat-option value=\"15\">15 minutes</mat-option>\n                <mat-option value=\"30\">30 minutes</mat-option>\n                <mat-option value=\"60\">1 hour</mat-option>\n                <mat-option value=\"90\">1 hour, 30 minutes</mat-option>\n                <mat-option value=\"120\">2 hour</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width w-100\"\n              *ngIf=\"!slotLoading && availableSlots.length>0\">\n              <mat-label>booking start time</mat-label>\n              <mat-select placeholder=\"booking start time\">\n                <mat-option *ngFor=\"let item of availableSlots\" (click)=\"selectedTime(item.slot)\"\n                  [value]=\"item.slot\">{{item.slot | date:'shortTime' }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n          </section>\n\n\n\n\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit,  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { first, retry } from \"rxjs/operators\";\n \nimport { \n  addHours,\n  addMinutes\n} from \"date-fns\";\nimport { Observable, Subject } from 'rxjs';\nimport { SearchService } from 'src/app/_services/search.service'; \nimport { MatDialog } from '@angular/material/dialog';  \nimport * as moment from 'moment';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { BookingService } from 'src/app/_services/booking.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { InventoryService } from 'src/app/_services/inventory.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { UtilService } from 'src/app/_services/util.service';\n\nconst colors: any = {\n  red: {\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\",\n  },\n  blue: {\n    primary: \"#1e90ff\",\n    secondary: \"#D1E8FF\",\n  },\n  yellow: {\n    primary: \"#e3bc08\",\n    secondary: \"#FDF1BA\",\n  },\n  green: {\n    primary: \"#0B8043\",\n    secondary: \"#13da72\",\n  },\n};\n\n@Component({\n  selector: 'app-meeting-book',\n  templateUrl: './meeting-book.component.html',\n  styleUrls: ['./meeting-book.component.css']\n})\nexport class MeetingBookComponent implements OnInit {\n  registerForm!: FormGroup;\n  brand: any = {};\n  venue: any = {};\n  inventory: any = {};\n  submitted: boolean = false;\n  loading: boolean = false;\n  slotLoading: boolean = false;\n  availableSlots: any = []\n  currentUser: any = {};\n  members: any = [];\n  dayStartHour!: number;\n  dayEndHour!: number;\n  duration: string = \"30 min\";\n  hostList: any = []; \n  usersList: any = []; \n  host:any={};\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private utilService: UtilService,\n    private inventoryService: InventoryService,\n    private imageService: ImageService,\n    private bookingService: BookingService,\n    private alertService: AlertService,\n    private authenticationService: AuthenticationService,\n    private searchService: SearchService,\n    public dialog: MatDialog,\n    private userService: UserService,  \n  ) {\n\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n  filteredHostOptions!: Observable<any[]>;\n  filteredLessorOptions!: Observable<any[]>;\n  ngOnInit(): void {\n \n    this.brand = this.utilService.getBrand();\n    this.venue = this.utilService.getVenue();\n    this.activatedRoute.params.subscribe((params: Params) => {\n      const id = params[\"id\"];\n      if (id) {\n        this.loadVacentInventory(id);\n      }\n    });\n\n    this.registerForm = this.formBuilder.group({\n      _id: [null],\n      title: [\"\",],\n      inventoryType: [\"\", Validators.required],\n\n      host: [\"\"], \n      spaceType: [\"\", Validators.required],//spaceType\n      inventory: [\"\", Validators.required],//inventory\n      startDate: [new Date().toISOString(), Validators.required],\n      endDate: [new Date().toISOString(), Validators.required],\n      startTime: [this.utilService.timeToInput(new Date()), Validators.required],\n      endTime: [this.utilService.timeToInput(addHours(new Date(), 1)), Validators.required],\n      paymentType: [\"Online\"],\n      name: [\"\"],\n      purpose: [\"Meeting\"],\n      email: [\"\"],\n      duration: [\"30\"],\n      description: [\"\"],\n    });\n    let today = new Date();\n    this.dayStartHour = today.getHours();\n    today.setHours(23, 59, 59, 59);\n    this.dayEndHour = this.dayStartHour + 8 < today.getHours() ? this.dayStartHour + 8 : today.getHours();\n    this.loadAllUser({ objectId: this.brand._id }, \"\"); \n    this.allocateHost(this.currentUser);\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n \n\n \n\n  loadVacentInventory(id: any) {\n    this.loading = true;\n    this.inventoryService\n      .getById(id)\n      .pipe(retry(2))\n      .subscribe((data: any) => {\n        this.inventory = data;\n        this.loading = false;\n        this.registerForm.patchValue({\n          inventoryType: this.inventory.inventoryType,\n          spaceType: this.inventory.spaceType?._id,\n          inventory: this.inventory._id\n        })\n\n\n      \n      });\n  }\n\n  imgSrc(type: any, name: any) {\n    return this.imageService.getImageUrl(type, name);\n  }\n\n  loadAvailableSlots(duration: any) {\n    if (!this.inventory._id) {\n      return;\n    }\n    this.duration = this.utilService.transformMinute(duration);\n    this.registerForm.patchValue({\n      duration: duration\n    })\n    const roundToQuarter = (date) => new Date(Math.round(date / 9e5) * 9e5);\n    let startDate = roundToQuarter(addMinutes(new Date(this.registerForm.value.startDate), 15));\n\n    let endDate = new Date();\n\n    endDate.setHours(23, 59, 59, 999);\n\n    let query = { \"inventory\": this.inventory._id, \"startDate\": startDate.toISOString(), \"endDate\": endDate.toISOString(), \"duration\": duration }\n    this.slotLoading = true;\n    this.bookingService\n      .getAvailableSlots(query, \"\")\n      .pipe(retry(2))\n      .subscribe((data: any[]) => {\n        data.forEach((element: { available: any; }) => {\n          if (element.available) {\n            this.availableSlots.push(element);\n          }\n        });\n\n        this.slotLoading = false\n      });\n  }\n\n  selectedTime(startDate: string | number | Date) {\n\n    startDate = new Date(startDate);\n\n    this.updateTime(startDate, this.registerForm.value.duration);\n  }\n\n  updateTime(date, value: number) {\n    if (!value) return;\n\n    this.registerForm.patchValue({\n      startDate: date.toISOString(),\n      endDate: addMinutes(date, value * 1).toISOString()\n    });\n\n\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      this.alertService.error(\"Please Provide Required Details!\");\n      return;\n    }\n\n    this.loading = true;\n\n    let model = this.registerForm.value;\n    delete model.name;\n    delete model.email;\n    model.venue = this.venue._id;\n    model.host =  this.currentUser?._id;\n    model.user =  this.currentUser?._id;\n    model.seat = this.inventory.capacity;\n    model.inventoryType = this.inventory.inventoryType;\n    model.spaceType = this.inventory.spaceType ? this.inventory.spaceType._id : \"\";\n    model.inventory = this.inventory ? this.inventory._id : \"\";\n    model.brand = this.brand._id;\n    model.status = \"Created\";\n\n    model.creator = this.currentUser?._id;\n    model.members = [];\n    this.members.forEach((element: { email: any; _id: any; }) => {\n      if (element.email) {\n        model.members.push(element._id);\n      }\n    });\n \n    model.startDate = moment.utc(model.startDate);\n    model.endDate = moment.utc(model.endDate);\n    this.bookingService\n      .register(model)\n      .pipe(retry(2))\n      .subscribe((data: any) => {\n        this.alertService.success(\"Booked Successfully!\");\n        this.loading = false\n        this.router.navigate([\"booking/details/\" + data._id]);\n      });\n  }\n\n  selectGuest(item: { _id: any; }) {\n    if (this.inventory.capacity > this.members.length) {\n      if (!this.utilService.getObject(this.members, \"_id\", item._id)) {\n        this.members.push(item); \n      }\n\n    } else {\n      this.alertService.error(\"Guest Limit Reached For This Room!\");\n    }\n  }\n  removeGuest(i: any) {\n    this.members.splice(i, 1);\n  }\n\n  allocateHost(user: any) {\n    this.host = user;\n    this.registerForm.controls.host.setValue(this.host);\n  }\n  \n\n  searchData(value: string, type: any,field: string) {\n    var _that = this;\n    let query: any = {};\n\n\n    this.searchService.onChangeSearch(value, query, type, function (data: { data: any[]; }) {\n      if (field == \"host\") {\n        // _that.users = data.data;\n        _that.hostList = [];\n        data.data.forEach((element: { user: any; }) => {\n          if (element.user) {\n            _that.hostList.push(element.user);\n          }\n        });\n        _that.filteredHostOptions = _that.utilService.filterForm(_that.registerForm.controls.host, _that.hostList); \n      }\n     else if (field == \"guest\") {\n        // _that.users = data.data;\n        _that.usersList = [];\n        data.data.forEach((element: { user: any; }) => {\n          if (element.user) {\n            _that.usersList.push(element.user);\n          }\n        }); \n        _that.filteredLessorOptions = _that.utilService.filterForm(_that.registerForm.controls.name, _that.usersList);\n      }\n    });\n  }\n  displayFn(item: { name: any; }) {\n    return item && item.name ? item.name : \"\";\n  }\n \n\n  private loadAllUser(query: { objectId: any; }, param: string) {\n    this.userService\n      .getAll(query, param)\n      .pipe(retry(2))\n      .subscribe((users: { data: any[]; }) => {\n        this.usersList = [];\n        this.hostList = [];\n        users.data.forEach((element: { user: { email: any; }; }) => {\n          if (element.user && element.user.email) {\n            this.hostList.push(element.user);\n            this.usersList.push(element.user);\n          }\n        });\n        this.filteredHostOptions = this.utilService.filterForm(this.registerForm.controls.host, this.hostList);\n        this.filteredLessorOptions = this.utilService.filterForm(this.registerForm.controls.name, this.usersList);\n      });\n  }\n  previewlogo() {\n\n  }\n  remove(item: string): void {\n    const index = this.members.indexOf(item);\n    if (index >= 0) {\n      this.members.splice(index, 1);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cancel-booking',\n  templateUrl: './cancel-booking.component.html',\n  styleUrls: ['./cancel-booking.component.css']\n})\nexport class CancelBookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-3\">\n  <div class=\"d-flex justify-content-center text-center flex-column\">\n    <div><img src=\"/assets/image/ScanQr/cancelBooking.svg\" alt=\"\"></div>\n    <div>\n      <h2>Want to cancel your\n        booking?</h2>\n    </div>\n    <div>\n      <p>Seletc reason of cancelling.</p>\n    </div>\n  </div>\n\n\n  <mat-radio-group aria-label=\"Select an option\">\n    <mat-radio-button value=\"Another meeting came\">Another meeting came</mat-radio-button>\n    <mat-radio-button value=\"Facility not availble in the room\">Facility not availble in the room</mat-radio-button>\n    <mat-radio-button value=\"Wrongly booked\">Wrongly booked</mat-radio-button>\n  </mat-radio-group>\n\n\n  <div class=\"d-flex text-center flex-column mt-3\">\n    <div><button mat-button class=\"border-danger btn w-100 text-danger border rounded my-2\"\n        [mat-dialog-close]=\"true\">Cancel</button></div>\n    <div><a href=\"javascript:;\" class=\"text-dark w-100 my-2\">Back</a></div>\n  </div>\n</div>","<div class=\"container-fluid p-0\">\n  <div class=\"box-container mx-auto\">\n    <div class=\"header\">\n      <div> <a class=\"d-flex align-items-center text-dark\" onclick=\"history.back()\">\n          <svg width=\"38\" height=\"39\" viewBox=\"0 0 38 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"19\" cy=\"19.7747\" r=\"18.5\" stroke=\"#6C757D\" />\n            <path\n              d=\"M8.76354 19.3351L13.9963 14.3406C14.3868 13.9661 15.0228 13.9661 15.4133 14.3454C15.8039 14.72 15.8039 15.3299 15.4083 15.7045L11.8932 19.0566H29.4419C29.9927 19.0566 30.4434 19.4888 30.4434 20.0171C30.4434 20.5453 29.9927 20.9775 29.4419 20.9775H11.8932L15.4083 24.3296C15.7989 24.7042 15.8039 25.3141 15.4133 25.6887C15.0228 26.0633 14.3868 26.0681 13.9963 25.6935L8.76354 20.699C8.36796 20.3196 8.37297 19.7097 8.76354 19.3351Z\"\n              fill=\"#6C757D\" />\n          </svg> <span class=\"ml-2\"> Back</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"firstBox\">\n\n      <div class=\"boxContent\">\n        <h2>\n          Booking Details\n        </h2>\n        <div class=\"position-relative text-center\" style=\"top:38px; z-index: 1;\">\n\n          <svg width=\"76\" height=\"75\" viewBox=\"0 0 76 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"37.9023\" cy=\"37.5\" r=\"37.5\" fill=\"#DAE6FC\" />\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n              d=\"M24.9362 39.1443L32.8245 46.3894C33.3764 46.8973 34.1048 47.1699 34.8546 47.149C35.6044 47.1282 36.3165 46.8156 36.8393 46.2778L50.9151 32.7995C51.4252 32.2626 51.7087 31.5499 51.7067 30.8094C51.7047 30.0689 51.4173 29.3577 50.9043 28.8237C50.3913 28.2897 49.6922 27.974 48.9524 27.9422C48.2126 27.9104 47.489 28.1651 46.9322 28.6532L34.7343 40.3273L28.8336 34.9104C28.2718 34.3936 27.5278 34.1211 26.7652 34.1528C26.0026 34.1846 25.2838 34.518 24.7669 35.0797C24.2501 35.6414 23.9776 36.3854 24.0094 37.1481C24.0411 37.9107 24.3745 38.6295 24.9362 39.1463V39.1443ZM37.9028 9.79581C32.4235 9.79581 27.0673 11.4206 22.5115 14.4647C17.9557 17.5088 14.4049 21.8355 12.308 26.8977C10.2112 31.9598 9.6626 37.5301 10.7315 42.9041C11.8005 48.278 14.439 53.2143 18.3134 57.0887C22.1878 60.9631 27.1241 63.6016 32.4981 64.6706C37.8721 65.7395 43.4423 65.1909 48.5045 63.0941C53.5666 60.9973 57.8933 57.4464 60.9374 52.8906C63.9815 48.3348 65.6063 42.9786 65.6063 37.4994C65.6063 30.1519 62.6876 23.1054 57.4922 17.91C52.2967 12.7146 45.2502 9.79581 37.9028 9.79581Z\"\n              fill=\"#176CFF\" />\n          </svg>\n\n        </div>\n        <section>\n          <h1 class=\"text-center mt-5\">Booking Confirmed!</h1>\n          <hr style=\"border-top: 1px dashed #C6C6C6;\">\n          <div class=\"infoCard\">\n            <h2>Booking with &nbsp;:</h2>\n            <div class=\"d-flex flex-row\">\n              <div><img [lazyLoad]=\"imgSrc('venue',item?.inventory?.image?.name)\"\n                  defaultImage=\"/assets/image/ScanQr/room.svg\" class=\"meeting-img\" width=\"48\" height=\"48\" alt=\"\">\n              </div>\n              <div class=\"d-flex flex-column ml-3\">\n                <div>\n                  <h3 class=\"mb-0\">{{item?.spaceType?.name}} {{item?.inventory?.name}}</h3>\n                </div>\n                <div>\n                  <p>{{item?.seat}} peoples</p>\n                </div>\n                <div>\n                  <p>{{item?.user?.name}}</p>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n          <hr style=\"border-top: 1px dashed #C6C6C6;\">\n          <div class=\"detialsCard\">\n            <h2>Booking Detials &nbsp;:</h2>\n            <div class=\"d-flex flex-row\">\n              <div class=\"d-flex flex-column\">\n                <div *ngIf=\"item?.venue?.name\"><label>Space name</label>\n                  <h3>{{item?.venue?.name}}</h3>\n                </div>\n                <div *ngIf=\"item?.startDate\"><label>Booking time</label>\n                  <h3>{{item?.startDate | date :'shortTime'}}</h3>\n                </div>\n                <div *ngIf=\"item?.venue?.location?.formattedAddress\"><label>Location</label>\n                  <h3>\n                    {{item?.venue?.location?.formattedAddress}}\n                  </h3>\n                </div>\n\n\n              </div>\n              <div>\n\n                <div *ngIf=\"item?.purpose\"><label>Floor</label>\n                  <h3>\n                    {{item?.inventory?.floor}}\n                  </h3>\n                </div>\n                <div *ngIf=\"item?.floor\"><label>Floor</label>\n                  <h3>\n                    {{item?.building?.floor}}\n                  </h3>\n                </div>\n\n\n                <div *ngIf=\"item?.startDate\"><label>Booking date</label>\n                  <h3>\n                    {{item?.startDate | date :'MMM d, y'}}\n                  </h3>\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n          <hr style=\"border-top: 1px dashed #C6C6C6;\">\n          <h2>Invited members &nbsp;:{{item?.members?.length}}</h2>\n          <div class=\"invitedCard\">\n            <div class=\"d-flex flex-wrap\">\n              <!-- <div class=\"d-flex flex-column align-items-center justify-content-center mr-3\">\n                <div class=\"ml-2\">\n                  <app-profile-image [user]=\"item?.user\"></app-profile-image>\n                </div>\n                <div class=\"d-flex flex-column ml-2\">\n                  <p class=\"mb-0\">{{item?.user?.name}}</p>\n                </div>\n              </div> -->\n\n\n              <div class=\"d-flex flex-column align-items-center  justify-content-center mr-3\"\n                *ngFor=\"let item of item?.members\">\n                <div class=\"ml-2\">\n                  <app-profile-image [user]=\"item\"></app-profile-image>\n                </div>\n                <div class=\"d-flex flex-column ml-2\">\n                  <p class=\"mb-0\">{{item?.name}}</p>\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"d-flex flex-column position-relative\" style=\"top: 150px;\">\n            <a class=\"editBtn mb-3\" [routerLink]=\"'/booking/room/5eba33813ccca9155084f4d4'\">Edit\n              Booking</a>\n            <a class=\"bg-transparent text-danger mb-3\" (click)=\"cancelDialog()\">Cancel This Booking</a>\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<!-- <mat-form-field appearance=\"outline\" class=\"full-width w-100\">\n          <input matInput placeholder=\"Add more members\">\n          <mat-icon matSuffix><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M8.00032 15.0006C11.8665 15.0006 15.0006 11.8665 15.0006 8.00032C15.0006 4.13415 11.8665 1 8.00032 1C4.13415 1 1 4.13415 1 8.00032C1 11.8665 4.13415 15.0006 8.00032 15.0006Z\"\n                stroke=\"#4D4D4D\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              <path d=\"M12.9502 12.9497L17.0004 16.9999\" stroke=\"#4D4D4D\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg></mat-icon>\n        </mat-form-field> -->\n\n<!-- <div class=\"d-flex\" *ngFor=\"let item of item.members\">\n          <div class=\"d-flex\">\n            <div>\n              <app-profile-image [user]=\"item\"></app-profile-image>\n            </div>\n            <div class=\"d-flex flex-column ml-2\">\n              <p class=\"mb-0\">{{item.name}}</p>\n\n            </div>\n          </div>\n\n        </div> -->\n\n<!-- <div class=\"d-flex flex-column mt-3\">\n          <div class=\" mr-5\">\n            <h3 *ngIf=\"item.title\">{{item.title}}</h3>\n\n            <div class=\"\">\n\n              <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column\">\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Booking date & time</p>\n                    <h4>{{ item.startDate | date: \"short\" }} - {{item.startDate | date:\"shortTime\" }} to\n                      {{item.endDate |\n                      date:\"shortTime\" }}</h4>\n                  </div>\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Purpose</p>\n                    <h4>{{item.purpose}}</h4>\n                  </div>\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Booking duration</p>\n                    <h4>{{transformMinute(item.duration)}}</h4>\n                  </div>\n                  <div class=\"my-2\">\n                    <p class=\"mb-1\">Room Info</p>\n                    <div class=\"d-flex\">\n                      <div>\n                        <img [lazyLoad]=\"imgSrc('venue',item.inventory?.image?.name)\"\n                          defaultImage=\"../../../../assets/image/Dashboard/Booking/meeting-room.svg\" class=\"meeting-img\"\n                          width=\"48\" height=\"48\" alt=\"\">\n                      </div>\n                      <div class=\"d-flex flex-column ml-2\">\n\n                        <h4 class=\"mb-0\">{{item.spaceType?.name}} {{item.inventory?.name}}</h4>\n                        <a href=\"javascript:;\" [routerLink]=\"'/booking/room/view/'+item?.inventory?._id\">View Room\n                          info</a>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"d-flex flex-column\">\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Booking ID </p>\n                    <h4>#{{item.booking}}</h4>\n                  </div>\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Seater</p>\n                    <h4>{{item.seat}} peoples</h4>\n                  </div>\n                  <div class=\"my-2\">\n                    <p class=\"mb-0\">Booked on:</p>\n                    <h4>{{ item.creationDate | date: \"short\" }} - {{item.creationDate | date:\"shortTime\" }}</h4>\n                  </div>\n\n                  <div class=\"my-2\">\n                    <p class=\"mb-1\">Booked by:</p>\n                    <div class=\"d-flex\">\n                      <div>\n                        <app-profile-image [user]=\"item.user\"></app-profile-image>\n                      </div>\n                      <div class=\"d-flex flex-column ml-2\">\n                        <h4 class=\"mb-0\">{{item.user?.name}}</h4>\n                        <h5 *ngIf=\"item.user?.dasignation\">{{item.user?.dasignation?.name}}</h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"\" *ngIf=\"item?.members?.length>0\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <input matInput placeholder=\"Add more members\">\n              <mat-icon matSuffix><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M8.00032 15.0006C11.8665 15.0006 15.0006 11.8665 15.0006 8.00032C15.0006 4.13415 11.8665 1 8.00032 1C4.13415 1 1 4.13415 1 8.00032C1 11.8665 4.13415 15.0006 8.00032 15.0006Z\"\n                    stroke=\"#4D4D4D\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                  <path d=\"M12.9502 12.9497L17.0004 16.9999\" stroke=\"#4D4D4D\" stroke-width=\"1.5\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg></mat-icon>\n            </mat-form-field>\n            <div>\n              <div class=\"d-flex\">\n                <div>\n                  <p class=\"d-flex\">\n                    <svg width=\"14\" height=\"14\" class=\"mr-2 mt-1\" viewBox=\"0 0 14 14\" fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n                      <path\n                        d=\"M6.90751 8.91658C9.09361 8.91658 10.8658 7.14439 10.8658 4.95829C10.8658 2.77219 9.09361 1 6.90751 1C4.72141 1 2.94922 2.77219 2.94922 4.95829C2.94922 7.14439 4.72141 8.91658 6.90751 8.91658Z\"\n                        stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                      <path\n                        d=\"M1 12.9999C1.60832 11.8597 2.48301 10.9129 3.5362 10.2547C4.5894 9.59649 5.78401 9.24999 7.00004 9.25C8.21606 9.25001 9.41066 9.59655 10.4638 10.2548C11.517 10.913 12.3917 11.8598 13 13\"\n                        stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    </svg>\n                    {{item?.members?.length}} members Added\n                  </p>\n                </div>\n                <div class=\"ml-auto float-right d-flex\">\n\n                </div>\n              </div>\n            </div>\n            <div class=\"card-border\">\n              <div class=\"d-flex\">\n                <div class=\"d-flex\">\n                  <div>\n                    <app-profile-image [user]=\"item.user\"></app-profile-image>\n                  </div>\n                  <div class=\"d-flex flex-column ml-2\">\n                    <p class=\"mb-0\">{{item.user?.name}}</p>\n\n                  </div>\n                </div>\n\n              </div>\n              <hr>\n              <div class=\"d-flex\" *ngFor=\"let item of item.members\">\n                <div class=\"d-flex\">\n                  <div>\n                    <app-profile-image [user]=\"item\"></app-profile-image>\n                  </div>\n                  <div class=\"d-flex flex-column ml-2\">\n                    <p class=\"mb-0\">{{item.name}}</p>\n\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n        </div> -->\n\n\n\n\n\n<!-- <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-2\">\n        <button mat-button color=\"primary\" cdkFocusInitial (click)=\"downloadAsPDF()\">\n            <span class=\"material-icons\">\n                cloud_download\n            </span>\n            Download</button>\n    </div>\n    <div class=\"col-md-2\">\n        <button mat-button color=\"accent\" cdkFocusInitial (click)=\"printDocument()\">\n            <span class=\"material-icons\">\n                print\n            </span>\n            Print</button>\n    </div>\n\n    <div class=\"col-md-4\">\n        <button mat-button color=\"warning\" (click)=\"copyLink(item)\">\n            <span class=\"material-icons\">\n                share\n            </span>\n        </button>\n\n    </div>\n</div>\n -->\n\n<!--\n<div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-10\">\n        <div class=\"main\" id=\"pdfContent\" #pdfContent>\n            <div class=\"header\">\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <ul>\n                            <li *ngIf=\"item.brand\">\n                                <h2>{{item.brand.name}}</h2>\n                            </li>\n\n                            <li class=\"venueAddress\" *ngIf=\"item.venue && item.venue.location\">\n                                <span>\n                                    {{item.venue.location.formattedAddress}}\n                                </span>\n                            </li>\n\n                        </ul>\n                    </div>\n                    <div class=\"col-md-4\">\n\n                        <img *ngIf=\"item.brand && item.brand.image\" [lazyLoad]=\"imgSrc('venue',item.brand.image.name)\"\n                            class=\"image-card\" defaultImage=\"./../../../../assets/image/default_blur.jpg\" width=\"224px\"\n                            height=\"50\">\n                        <img *ngIf=\"item.brand && !item.brand.image\" src=\"../../../../assets/image/logo.png\"\n                            width=\"224px\" height=\"50\">\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"commercial\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <mat-divider class=\"divider-black\"></mat-divider>\n                    </div>\n                </div>\n            </div>\n            <div class=\"address\">\n                <div class=\"watermark\" *ngIf=\"item.status=='Deposited'\">PAID</div>\n            </div>\n            <div class=\"plans\">\n                <mat-card class=\"example-card\">\n                    <mat-card-header>\n                        <mat-card-title>\n\n                            <h2>Booking Details</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <table width=\"100%\">\n                                    <tr *ngIf=\"item.user\">\n                                        <td width=\"100\">Name:</td>\n                                        <td>{{item.user.name}}</td>\n                                    </tr>\n                                </table>\n                                <br>\n                                {{item.spaceType?item.spaceType.name:\"\"}}&nbsp;<strong\n                                    *ngIf=\"item.inventory\">{{item.inventory.name}}</strong>\n                                &nbsp;<span *ngIf=\"item.seat\">{{item.seat}} seater</span>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <table align=\"right\">\n                                    <tr>\n                                        <td align=\"right\">From: </td>\n                                        <td>&nbsp; {{ item.startDate | date: \"short\":'GMT' }}</td>\n                                    </tr>\n                                    <tr>\n                                        <td align=\"right\">Till: </td>\n                                        <td>&nbsp; {{ item.endDate | date: \"short\":'GMT' }}</td>\n                                    </tr>\n\n                                </table>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"my-3\">\n                                    <mat-divider></mat-divider>\n\n                                </div>\n\n                                <mat-list role=\"list\" *ngIf=\"item.members && item.members.length>0\">\n                                    <h2 mat-subheader>Attendees</h2>\n                                    <mat-list-item role=\"listitem\" *ngFor=\"let item of item.members\">\n                                        <div>{{item.name}} </div>\n                                        <br>\n                                        &nbsp;\n                                        <small> ({{item.email}})</small>\n                                    </mat-list-item>\n\n                                </mat-list>\n\n                            </div>\n                            <div class=\"col-md-6 d-flex align-items-end d-flex justify-content-end\">\n                                <table align=\"right\" *ngIf=\"item.grandTotal>0\">\n\n                                    <tr>\n                                        <td align=\"right\"> Sub Total: </td>\n                                        <td>&nbsp;<strong>{{getFormattedAmount(item.subTotal)}}/-</strong></td>\n                                    </tr>\n                                    <tr *ngIf=\"item.taxAmount && item.taxAmount>0\">\n                                        <td align=\"right\"> Tax Amount: </td>\n                                        <td>&nbsp;<strong>{{getFormattedAmount(item.taxAmount)}}/-</strong></td>\n                                    </tr>\n                                    <tr>\n                                        <td align=\"right\"> Grand Total: </td>\n                                        <td>&nbsp;<strong>{{getFormattedAmount(item.grandTotal)}}/-</strong></td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions>\n                    </mat-card-actions>\n                </mat-card>\n                <br>\n                <p *ngIf=\"item.grandTotal>0\">\n                    * All prices are calculated per month in {{item.venue &&\n                    item.venue.currency?item.venue.currency.code:\"INR\"}}\n                </p>\n            </div>\n            <div class=\"commercial\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <mat-divider class=\"divider-black\"></mat-divider>\n                    </div>\n                </div>\n            </div>\n            <div class=\"commercial\" *ngIf=\"item.brand && item.brand.location\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        {{item.brand.formattedAddress}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { ActivatedRoute, Params } from \"@angular/router\";\n \nimport { first, retry } from \"rxjs/operators\";\n\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { appConfig } from \"../../../global.config\";\nimport { CancelBookingComponent } from \"../cancel-booking/cancel-booking.component\";\nimport { AlertService } from \"src/app/_services/alert.service\";\nimport { AuthenticationService } from \"src/app/_services/authentication.service\";\nimport { BookingService } from \"src/app/_services/booking.service\";\nimport { ImageService } from \"src/app/_services/image.service\";\nimport { UtilService } from \"src/app/_services/util.service\";\ndeclare const mixpanel: any;\n\n@Component({\n  selector: \"app-view-booking\",\n  templateUrl: \"./view-booking.component.html\",\n  styleUrls: [\"./view-booking.component.css\"],\n})\nexport class ViewBookingComponent implements OnInit {\n  @ViewChild(\"pdfContent\", { static: false, read: ElementRef })\n  pdfContent: ElementRef;\n  item: any = {};\n  totalPrice: number;\n  currentUser: any = {};\n  homeUrl = \"/community\";\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private utilService: UtilService,\n    public dialog: MatDialog,\n    private authenticationService: AuthenticationService,\n    private imageService: ImageService,\n    private bookingService: BookingService,\n    private alertService: AlertService,\n\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    this.homeUrl = this.utilService.getHomeUrl(this.currentUser);\n  }\n\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe((params: Params) => {\n      const booking = params[\"id\"];\n\n      this.loadInvoices(booking);\n    });\n  }\n\n  private loadInvoices(query) {\n    this.bookingService\n      .getById(query)\n      .pipe(retry(2))\n      .subscribe((objects) => {\n        this.item = objects;\n        this.item.startDate = this.utilService.formatLocalDate(this.item.startDate);\n        this.item.endDate = this.utilService.formatLocalDate(this.item.endDate);\n      });\n  }\n\n\n\n  imgSrc(type, name) {\n    return this.imageService.getDefaultImageUrl(type, name);\n  }\n\n  getFileUrl(type, name) {\n    return this.imageService.getFileUrl(type, name);\n  }\n\n  printDocument() {\n    var printContents = document.getElementById(\"pdfContent\").innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    window.location.reload();\n  }\n\n  getFormattedAmount(item) {\n    return this.utilService.getFormattedAmount(item);\n  }\n\n  copyLink(item) {\n    this.utilService.copyData(appConfig.HOST + \"/booking/\" + item._id);\n    this.alertService.success(\"Link Copied Successfully!\");\n  }\n\n  transformMinute(value: number): string {\n    return this.utilService.transformMinute(value);\n  }\n  cancelDialog() {\n    const dialogRef = this.dialog.open(CancelBookingComponent, {\n      width: \"371px\",\n      height: \"550px\",\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n","<div class=\"container-fluid p-0\">\n  <div class=\"box-container mx-auto\">\n    <div class=\"header\">\n      <div> <a class=\"d-flex align-items-center text-dark\" onclick=\"history.back()\">\n          <svg width=\"38\" height=\"39\" viewBox=\"0 0 38 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"19\" cy=\"19.7747\" r=\"18.5\" stroke=\"#6C757D\" />\n            <path\n              d=\"M8.76354 19.3351L13.9963 14.3406C14.3868 13.9661 15.0228 13.9661 15.4133 14.3454C15.8039 14.72 15.8039 15.3299 15.4083 15.7045L11.8932 19.0566H29.4419C29.9927 19.0566 30.4434 19.4888 30.4434 20.0171C30.4434 20.5453 29.9927 20.9775 29.4419 20.9775H11.8932L15.4083 24.3296C15.7989 24.7042 15.8039 25.3141 15.4133 25.6887C15.0228 26.0633 14.3868 26.0681 13.9963 25.6935L8.76354 20.699C8.36796 20.3196 8.37297 19.7097 8.76354 19.3351Z\"\n              fill=\"#6C757D\" />\n          </svg> <span class=\"ml-2\"> Back</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"firstBox\">\n\n      <div class=\"boxContent\">\n\n        <div class=\"d-flex\">\n          <div>\n            <h2>\n              {{inventory?.inventoryType==\"6065428d17d9243720f34eb8\"?\"Room\":\"Space\"}} Details\n            </h2>\n\n          </div>\n          <div class=\"ml-auto float-right d-flex\">\n\n            <div>\n              <button mat-button color=\"primary\" [routerLink]=\"'/booking/confirm/'+inventory._id\">Book</button>\n            </div>\n          </div>\n        </div>\n        <section>\n          <div class=\"border-box mt-4\">\n            <div class=\"row\">\n              <div class=\"col-11\">\n                <div class=\"d-flex\">\n                  <div>\n                    <label>Room Type &nbsp;<b>:</b></label>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"mb-2\">{{inventory.spaceType?.name.replace('s','')}} {{inventory.name}} </h3>\n                  </div>\n                </div>\n                <div class=\"d-flex\">\n                  <div>\n                    <label>Floor &nbsp;<b>:</b></label>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"mb-2\">{{inventory.floor?.name}} </h3>\n                  </div>\n                </div>\n                <div class=\"d-flex \">\n                  <div>\n                    <label>Seater &nbsp;<b>:</b></label>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"mb-2\">{{inventory?.capacity}} Seater </h3>\n                  </div>\n                </div>\n                <div class=\"d-flex \" *ngIf=\"inventory?.description\">\n                  <div>\n                    <label>Description &nbsp;<b>:</b></label>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"mb-2\">{{inventory?.description}} </h3>\n                  </div>\n                </div>\n                <div class=\"d-flex \" *ngIf=\"inventory?.direction\">\n                  <div>\n                    <label>Direction &nbsp;<b>:</b></label>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"mb-2\">{{inventory?.description}}</h3>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n          <div *ngIf=\"amenities.data\">\n            <h4 class=\"mt-4\">Facilities</h4>\n            <div class=\"border-box\">\n              <div class=\"row\">\n                <div class=\"d-flex col-md-3\" *ngFor=\"let item of amenities.data\">\n                  <p class=\"d-flex\" *ngIf=\"item?.facility?.icon\">\n\n                    <img [lazyLoad]=\"imgSrc('venue',item?.facility?.icon)\" *ngIf=\"item?.facility?.icon\"\n                      class=\"image-card\" defaultImage=\"./../../../../assets/image/default-image.jpg\" width=\"20\"\n                      height=\"20\">\n                    &nbsp; {{item?.facility?.name}}\n                  </p>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n          <div class=\"images mb-3\">\n            <h4 class=\"mt-4\">Room Images</h4>\n            <div class=\"border-box\">\n              <div class=\"row\" *ngIf=\"inventory?.taggedImages?.length>0\">\n                <div class=\"col-md-6\">\n                  <img [lazyLoad]=\"imgSrc('venue',inventory.taggedImages[0].name)\"\n                    *ngIf=\"inventory.taggedImages[0].name\" defaultImage=\"./../../../../assets/image/default-image.jpg\"\n                    width=\"150\" height=\"150\">\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 p-0 d-flex flex-column img-glry\"\n                      *ngFor=\"let images of inventory.taggedImages | slice:1:5; let i = index\">\n                      <div class=\"d-flex\">\n                        <img class=\"rounded\" [lazyLoad]=\"imgSrc('venue',images.name)\" *ngIf=\"images.name && i<4\"\n                          defaultImage=\"./../../../../assets/image/default-image.jpg\" width=\"150\" height=\"150\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n            </div>\n\n          </div>\n        </section>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/_helpers';\nimport { MeetingRoomComponent } from 'src/app/public/bookings/add-booking/meeting-room/meeting-room.component';\nimport { MeetingBookComponent } from 'src/app/public/bookings/meeting-book/meeting-book.component';\nimport { ViewBookingComponent } from 'src/app/public/bookings/view-booking/view-booking.component';\nimport { ViewRoomComponent } from 'src/app/public/bookings/view-room/view-room.component';\n\nconst routes: Routes = [\n  {\n    path: \"room/:id\",\n    component: MeetingRoomComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"room/view/:id\",\n    component: ViewRoomComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"confirm/:id\",\n    component: MeetingBookComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"details/:id\",\n    component: ViewBookingComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BookingRoutingModule { }\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router'; \nimport { first, retry } from \"rxjs/operators\"; \nimport { MatDialog } from '@angular/material/dialog'; \nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { AlertService } from 'src/app/_services/alert.service';\nimport { UtilService } from 'src/app/_services/util.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { BookingService } from 'src/app/_services/booking.service';\nimport { InventoryService } from 'src/app/_services/inventory.service';\n\nconst colors: any = {\n  red: {\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\",\n  },\n  blue: {\n    primary: \"#1e90ff\",\n    secondary: \"#D1E8FF\",\n  },\n  yellow: {\n    primary: \"#e3bc08\",\n    secondary: \"#FDF1BA\",\n  },\n  green: {\n    primary: \"#0B8043\",\n    secondary: \"#13da72\",\n  },\n};\n@Component({\n  selector: 'app-view-room',\n  templateUrl: './view-room.component.html',\n  styleUrls: ['./view-room.component.css']\n})\nexport class ViewRoomComponent implements OnInit { \n  dayStartHour: number;\n  dayEndHour: number;\n  amenities: any = [];\n  brand: any = {};\n  venue: any = {};\n  inventory: any = {};\n  facilitySkeleton: boolean = false;\n  loading: boolean = false;\n\n  siteFiles: any = [];\n  message;\n  images;\n  progress: number = 0;\n  submitted = false;\n  uploadedImage: any = [];\n  constructor(\n    public dialog: MatDialog,\n    private utilService: UtilService, \n    private imageService: ImageService, \n    private inventoryService: InventoryService,\n    private activatedRoute: ActivatedRoute,  \n\n  ) { }\n\n  ngOnInit(): void { \nthis.brand=this.utilService.getBrand();\nthis.venue=this.utilService.getVenue();\n    let today = new Date();\n    this.dayStartHour = today.getHours();\n    today.setHours(23, 59, 59, 59);\n    this.dayEndHour = this.dayStartHour + 8 < today.getHours() ? this.dayStartHour + 8 : today.getHours();\n\n    this.activatedRoute.params.subscribe((params: Params) => {\n      const id = params[\"id\"];\n      if (id) {\n        this.loadVacentInventory(id);\n      }\n    });\n  }\n\n \n  loadVacentInventory(id) {\n    this.loading = true;\n    this.inventoryService\n      .getById(id)\n      .pipe(retry(2))\n      .subscribe((data) => {\n        this.inventory = data; \n        this.loading = false; \n      });\n  }\n\n \n\n  imgSrc(type, name) {\n    return this.imageService.getImageUrl(type, name);\n  }\n  \n \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BookingRoutingModule } from './booking-routing.module';\nimport { ViewBookingComponent } from 'src/app/public/bookings/view-booking/view-booking.component';\nimport { MeetingRoomComponent } from 'src/app/public/bookings/add-booking/meeting-room/meeting-room.component';\nimport { MeetingBookComponent } from 'src/app/public/bookings/meeting-book/meeting-book.component';\nimport { ViewRoomComponent } from 'src/app/public/bookings/view-room/view-room.component';\n\n\n@NgModule({\n  declarations: [\n   /*  MeetingRoomComponent,\n    ViewRoomComponent,\n    ViewBookingComponent,\n    MeetingBookComponent */\n  ],\n  imports: [\n    CommonModule,\n    BookingRoutingModule\n  ]\n})\nexport class BookingModule { }\n"]}